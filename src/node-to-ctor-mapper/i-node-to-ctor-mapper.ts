import {AccessorDeclaration, ArrayBindingElement, ArrayBindingPattern, BindingElement, BindingName, CallSignatureDeclaration, ClassDeclaration, ClassElement, ClassExpression, ConstructorDeclaration, ConstructSignatureDeclaration, Decorator, ExportSpecifier, FunctionLikeDeclaration, GetAccessorDeclaration, HeritageClause, Identifier, ImportClause, ImportSpecifier, IndexSignatureDeclaration, InterfaceDeclaration, MethodDeclaration, MethodSignature, ModifiersArray, ObjectBindingPattern, ParameterDeclaration, PropertyDeclaration, PropertySignature, SetAccessorDeclaration, SignatureDeclaration, TypeElement, TypeLiteralNode} from "typescript";
import {IImportClauseCtor} from "../light-ast/ctor/import-clause/i-import-clause-ctor";
import {INamedImportExportCtor} from "../light-ast/ctor/named-import-export/i-named-import-export-ctor";
import {ITypeLiteralCtor} from "../light-ast/ctor/type-literal/i-type-literal-ctor";
import {IInterfaceCtor} from "../light-ast/ctor/interface/i-interface-ctor";
import {ITypeElementCtor, TypeElementCtor} from "../light-ast/ctor/type-element/i-type-element-ctor";
import {HeritageCtor, IExtendsHeritageCtor, IImplementsHeritageCtor} from "../light-ast/ctor/heritage/i-heritage-ctor";
import {IPropertySignatureCtor} from "../light-ast/ctor/property-signature/i-property-signature-ctor";
import {ICallSignatureCtor} from "../light-ast/ctor/call-signature/i-call-signature-ctor";
import {IConstructSignatureCtor} from "../light-ast/ctor/construct-signature/i-construct-signature-ctor";
import {IMethodSignatureCtor} from "../light-ast/ctor/method-signature/i-method-signature-ctor";
import {IIndexSignatureCtor} from "../light-ast/ctor/index-signature/i-index-signature-ctor";
import {ISignatureCtor} from "../light-ast/ctor/signature/i-signature-ctor";
import {IParameterCtor} from "../light-ast/ctor/parameter/i-parameter-ctor";
import {BindingNameCtor, IArrayBindingNameCtor, INormalBindingNameCtor, IObjectBindingNameCtor} from "../light-ast/ctor/binding-name/binding-name-ctor";
import {IObjectBindingElementCtor} from "../light-ast/ctor/binding-element/i-object-binding-element-ctor";
import {ArrayBindingElementCtor, INormalArrayBindingElementCtor, IOmittedArrayBindingElementCtor} from "../light-ast/ctor/binding-element/array-binding-element-ctor";
import {IDecoratorCtor} from "../light-ast/ctor/decorator/i-decorator-ctor";
import {IAllModifiersCtor} from "../light-ast/ctor/modifier/i-all-modifiers-ctor";
import {IClassCtor} from "../light-ast/ctor/class/i-class-ctor";
import {ClassElementCtor} from "../light-ast/ctor/class-element/class-element-ctor";
import {ClassAccessorCtor} from "../light-ast/ctor/class-accessor/class-accessor-ctor";
import {IFunctionLikeCtor} from "../light-ast/ctor/function-like/i-function-like-ctor";
import {AccessorCtor, IAccessorCtor, IGetAccessorCtor, ISetAccessorCtor} from "../light-ast/ctor/accessor/accessor-ctor";
import {IClassPropertyCtor} from "../light-ast/ctor/class-property/i-class-property-ctor";
import {IClassMethodCtor} from "../light-ast/ctor/class-method/i-class-method-ctor";
import {IMethodCtor} from "../light-ast/ctor/method/i-method-ctor";
import {IFunctionLikeWithParametersCtor} from "../light-ast/ctor/function-like-with-parameters/i-function-like-with-parameters-ctor";
import {IConstructorCtor} from "../light-ast/ctor/constructor/i-constructor-ctor";
import {Optional} from "../optional/optional";

export interface INodeToCtorMapperBase {
	toIClassCtor (node: Optional<ClassDeclaration|ClassExpression>): IClassCtor|null;
	toIImportClauseCtor (node: Optional<ImportClause>): IImportClauseCtor|null;
	toINamedImportExportCtor (node: Optional<ImportSpecifier|ExportSpecifier>): INamedImportExportCtor|null;
	toITypeLiteralCtor (node: Optional<TypeLiteralNode|InterfaceDeclaration>): ITypeLiteralCtor|null;
	toIInterfaceCtor (node: Optional<InterfaceDeclaration>): IInterfaceCtor|null;
	toITypeElementCtor (node: Optional<TypeElement>): ITypeElementCtor|null;
	toTypeElementCtor (node: Optional<TypeElement>): TypeElementCtor|null;
	toHeritageCtor (node: Optional<HeritageClause>): HeritageCtor|null;
	toIAllModifiersCtor (modifiers: Optional<ModifiersArray>): IAllModifiersCtor|null;
	toIExtendsHeritageCtor (node: Optional<HeritageClause>): IExtendsHeritageCtor|null;
	toIImplementsHeritageCtor (node: Optional<HeritageClause>): IImplementsHeritageCtor|null;
	toIPropertySignatureCtor (node: Optional<PropertySignature>): IPropertySignatureCtor|null;
	toICallSignatureCtor (node: Optional<CallSignatureDeclaration>): ICallSignatureCtor|null;
	toIConstructSignatureCtor (node: Optional<ConstructSignatureDeclaration>): IConstructSignatureCtor|null;
	toIMethodSignatureCtor (node: Optional<MethodSignature>): IMethodSignatureCtor|null;
	toIIndexSignatureCtor (node: Optional<IndexSignatureDeclaration>): IIndexSignatureCtor|null;
	toISignatureCtor (node: Optional<SignatureDeclaration>): ISignatureCtor|null;
	toIParameterCtor (node: Optional<ParameterDeclaration>): IParameterCtor|null;
	toBindingNameCtor (node: Optional<BindingName>): BindingNameCtor|null;
	toINormalBindingNameCtor (node: Optional<Identifier>): INormalBindingNameCtor|null;
	toIObjectBindingNameCtor (node: Optional<ObjectBindingPattern>): IObjectBindingNameCtor|null;
	toIArrayBindingNameCtor (node: Optional<ArrayBindingPattern>): IArrayBindingNameCtor|null;
	toIObjectBindingElementCtor (node: Optional<BindingElement>): IObjectBindingElementCtor|null;
	toINormalArrayBindingElementCtor (node: Optional<BindingElement>): INormalArrayBindingElementCtor|null;
	toIOmittedArrayBindingElementCtor (node: Optional<ArrayBindingElement>): IOmittedArrayBindingElementCtor|null;
	toArrayBindingElementCtor (node: Optional<ArrayBindingElement>): ArrayBindingElementCtor|null;
	toIDecoratorCtor (node: Optional<Decorator>): IDecoratorCtor|null;
	toClassElementCtor (node: Optional<ClassElement>): ClassElementCtor|null;
	toClassAccessorCtor (node: Optional<AccessorDeclaration>): ClassAccessorCtor|null;
	toAccessorCtor (node: Optional<AccessorDeclaration>): AccessorCtor|null;
	toIFunctionLikeCtor (node: Optional<FunctionLikeDeclaration>): IFunctionLikeCtor|null;
	toIGetAccessorCtor (node: Optional<GetAccessorDeclaration>): IGetAccessorCtor|null;
	toISetAccessorCtor (node: Optional<SetAccessorDeclaration>): ISetAccessorCtor|null;
	toIAccessorCtor (node: Optional<AccessorDeclaration>): IAccessorCtor|null;
	toIClassPropertyCtor (node: Optional<PropertyDeclaration>): IClassPropertyCtor|null;
	toIClassMethodCtor (node: Optional<MethodDeclaration>): IClassMethodCtor|null;
	toIMethodCtor (node: Optional<MethodDeclaration>): IMethodCtor|null;
	toIFunctionLikeWithParametersCtor (node: Optional<FunctionLikeDeclaration>): IFunctionLikeWithParametersCtor|null;
	toIConstructorCtor (node: Optional<ConstructorDeclaration>): IConstructorCtor|null;
	fallbackToNull<T> (item: T|undefined): T|null;
}